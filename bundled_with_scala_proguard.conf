-injars target/scala-2.10/abandon-assembly-0.1.1.jar
-outjars target/scala-2.10/proguard_abandon-assembly-0.1.1.jar

-libraryjars <java.home>/lib/rt.jar
-libraryjars <java.home>/lib/jfxrt.jar

-dontwarn scala.**, scalafx.**
-verbose
-dontobfuscate
-flattenpackagehierarchy ''
-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod
-adaptresourcefilecontents **.fxml,**.properties,META-INF/MANIFEST.MF

-keepclassmembernames class * {
  @javafx.fxml.FXML *;
}


# Keep - Applications. Keep all application classes, along with their 'main'
# methods.
-keepclasseswithmembers public class com.javafx.main.Main, co.uproot.abandon.Main {
  public static void main(java.lang.String[]);
}

-keep public class co.uproot.abandon.AbandonUI

# Scala specific
-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinPool {
    long eventCount;
    int  workerCounts;
    int  runControl;
    scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode syncStack;
    scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode spareStack;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinWorkerThread {
    int base;
    int sp;
    int runState;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinTask {
    int status;
}

-keepclassmembernames class scala.concurrent.forkjoin.LinkedTransferQueue {
    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference head;
    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference tail;
    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference cleanMe;
}

-keepclassmembers class * {
  ** ctl;
  ** parkBlocker;
  ** runState;
  ** head;
  ** tail;
  ** sweepVotes;
  ** item;
  ** next;
  ** waiter;
  ** MODULE$;          
  ** bytes();
}

-keep class scala.reflect.ScalaSignature
-keep class scala.reflect.api.Mirror 
-keep class scala.Function*
-keep class scala.collection.GenSeq
-keep class scala.collection.generic.CanBuildFrom
-keep class scala.math.Ordering
-keep class scala.AnyVal 
-keep class scala.Array 
-keep class scala.Boolean 
-keep class scala.Byte 
-keep class scala.Char 
-keep class scala.Double 
-keep class scala.Float 
-keep class scala.Int 
-keep class scala.Long 
-keep class scala.Short 
-keep class scala.Unit 
-keep class scala.Predef
-keep class scala.package

-keepclassmembers class co.uproot.** {
  public *;
}


# -keep class scala.reflect.** {
  # public protected *;
# }
# 
# -keep class scala.Function*, scala.Tuple* {
  # public protected *;
# }
# 
# -keep class scala.collection.** {
  # public protected *;
# }


# enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

